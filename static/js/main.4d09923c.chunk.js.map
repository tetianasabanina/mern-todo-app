{"version":3,"sources":["logo.svg","components/create-todo.component.js","components/edit-todo.component.js","components/todos-list.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CreateTodo","props","onChangeTodoDescription","bind","onChangeTodoResponsible","onChangeTodoPriority","onSubmit","state","todo_description","todo_responsible","todo_priority","todo_completed","e","this","setState","target","value","preventDefault","console","log","newTodo","axios","post","then","res","data","history","push","style","marginTop","className","type","onChange","name","id","checked","Component","EditTodo","onChangeTodoCompleted","get","match","params","response","catch","error","obj","align","htmlFor","Todo","delete","todo","_id","err","to","onClick","TodosList","_isMounted","todos","map","currentTodo","i","key","todoList","App","href","rel","src","logo","width","height","alt","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d09923c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nexport default class CreateTodo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\r\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\r\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            todo_description: '',\r\n            todo_responsible: '',\r\n            todo_priority: '',\r\n            todo_completed: false\r\n        }\r\n    }\r\n\r\n    onChangeTodoDescription(e) {\r\n        this.setState({\r\n            todo_description: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoResponsible(e) {\r\n        this.setState({\r\n            todo_responsible: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoPriority(e) {\r\n        this.setState({\r\n            todo_priority: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        console.log(`Form submitted:`);\r\n        console.log(`Todo Description: ${this.state.todo_description}`);\r\n        console.log(`Todo Responsible: ${this.state.todo_responsible}`);\r\n        console.log(`Todo Priority: ${this.state.todo_priority}`);\r\n        \r\n        const newTodo = {\r\n            todo_description: this.state.todo_description,\r\n            todo_responsible: this.state.todo_responsible,\r\n            todo_priority: this.state.todo_priority,\r\n            todo_completed: this.state.todo_completed\r\n        };\r\n\r\n        axios.post('http://localhost:4000/todos/add', newTodo)\r\n            .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            todo_description: '',\r\n            todo_responsible: '',\r\n            todo_priority: '',\r\n            todo_completed: false\r\n        })\r\n\r\n        this.props.history.push('merm-todo-app/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Create New Todo</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\"> \r\n                        <label>Description: </label>\r\n                        <input  type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.todo_description}\r\n                                onChange={this.onChangeTodoDescription}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Responsible: </label>\r\n                        <input \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                value={this.state.todo_responsible}\r\n                                onChange={this.onChangeTodoResponsible}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityLow\" \r\n                                    value=\"Low\"\r\n                                    checked={this.state.todo_priority==='Low'} \r\n                                    onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">Low</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityMedium\" \r\n                                    value=\"Medium\" \r\n                                    checked={this.state.todo_priority==='Medium'} \r\n                                    onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">Medium</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityHigh\" \r\n                                    value=\"High\" \r\n                                    checked={this.state.todo_priority==='High'} \r\n                                    onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">High</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Create Todo\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class EditTodo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\r\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\r\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\r\n        this.onChangeTodoCompleted = this.onChangeTodoCompleted.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            todo_description: '',\r\n            todo_responsible: '',\r\n            todo_priority: '',\r\n            todo_completed: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/todos/'+this.props.match.params.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    todo_description: response.data.todo_description,\r\n                    todo_responsible: response.data.todo_responsible,\r\n                    todo_priority: response.data.todo_priority,\r\n                    todo_completed: response.data.todo_completed\r\n                })\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n    \r\n    onChangeTodoDescription(e) {\r\n        this.setState({\r\n            todo_description: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoResponsible(e) {\r\n        this.setState({\r\n            todo_responsible: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoPriority(e) {\r\n        this.setState({\r\n            todo_priority: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoCompleted(e) {\r\n        this.setState({\r\n            todo_completed: !this.state.todo_completed\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const obj = {\r\n            todo_description: this.state.todo_description,\r\n            todo_responsible: this.state.todo_responsible,\r\n            todo_priority: this.state.todo_priority,\r\n            todo_completed: this.state.todo_completed\r\n        };\r\n        console.log(obj);\r\n        axios.post('http://localhost:4000/todos/update/'+this.props.match.params.id, obj)\r\n            .then(res => console.log(res.data))\r\n                    \r\n        this.props.history.push('merm-todo-app/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 align=\"center\">Update Todo</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Description: </label>\r\n                        <input type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state.todo_description}\r\n                            onChange={this.onChangeTodoDescription}\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Responsible: </label>\r\n                        <input type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state.todo_responsible}\r\n                            onChange={this.onChangeTodoResponsible}\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input type=\"radio\"\r\n                                className=\"form-check-input\"\r\n                                name=\"priorityOptions\"\r\n                                id=\"priorityLow\"\r\n                                value=\"Low\"\r\n                                checked={this.state.todo_priority==='Low'}\r\n                                onChange={this.onChangeTodoPriority}\r\n                                />\r\n                            <label className=\"form-check-label\">Low</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input type=\"radio\"\r\n                                className=\"form-check-input\"\r\n                                name=\"priorityOptions\"\r\n                                id=\"priorityMedium\"\r\n                                value=\"Medium\"\r\n                                checked={this.state.todo_priority==='Medium'}\r\n                                onChange={this.onChangeTodoPriority}\r\n                                />\r\n                            <label className=\"form-check-label\">Medium</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input type=\"radio\"\r\n                                className=\"form-check-input\"\r\n                                name=\"priorityOptions\"\r\n                                id=\"priorityHigh\"\r\n                                value=\"High\"\r\n                                checked={this.state.todo_priority==='High'}\r\n                                onChange={this.onChangeTodoPriority}\r\n                                />\r\n                            <label className=\"form-check-label\">High</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id=\"completedCheckbox\"\r\n                            name=\"completedCheckbox\"\r\n                            value={this.state.todo_completed}\r\n                            checked={this.state.todo_completed}\r\n                            onChange={this.onChangeTodoCompleted}                            \r\n                            />\r\n                        <label className=\"form-check-label\" htmlFor=\"completedCheckbox\">\r\n                            Completed\r\n                        </label>\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Update Todo\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Todo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.delete = this.delete.bind(this);\r\n    }\r\n    \r\n    delete() {\r\n        axios.get('http://localhost:4000/todos/delete/'+this.props.todo._id)\r\n            .then(console.log('Deleted'))\r\n            .catch(err => console.log('Not deleted',err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td className={this.props.todo.todo_completed ? 'completed' : ''}>{this.props.todo.todo_description}</td>\r\n                <td className={this.props.todo.todo_completed ? 'completed' : ''}>{this.props.todo.todo_responsible}</td>\r\n                <td className={this.props.todo.todo_completed ? 'completed' : ''}>{this.props.todo.todo_priority}</td>\r\n                <td>\r\n                    <Link to={\"merm-todo-app/edit/\"+this.props.todo._id} className=\"btn btn-outline-primary\">Edit</Link>\r\n                </td>\r\n                <td>\r\n                <button onClick={this.delete} className=\"btn btn-outline-danger\">Delete</button>\r\n                </td>\r\n            </tr>\r\n        )}\r\n}\r\nexport default class TodosList extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {todos: []};\r\n        \r\n    }\r\n\r\n    _isMounted = false;\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        axios.get('http://localhost:4000/todos/')\r\n            .then(response => {\r\n                if (this._isMounted) {\r\n                this.setState({ todos: response.data });\r\n                }\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        axios.get('http://localhost:4000/todos/')\r\n            .then(response => {\r\n                if (this._isMounted) {\r\n                this.setState({ todos: response.data });\r\n                }\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n    \r\n    todoList() {\r\n        return this.state.todos.map(function(currentTodo, i) {\r\n            return <Todo todo={currentTodo} key={i} />;\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Todos List</h3>\r\n                <table className=\"table table-striped\" style={{ marginTop: 20 }} >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Description</th>\r\n                            <th>Responsible</th>\r\n                            <th>Priority</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { this.todoList() }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport CreateTodo from \"./components/create-todo.component\";\r\nimport EditTodo from \"./components/edit-todo.component\";\r\nimport TodosList from \"./components/todos-list.component\";\r\n\r\nimport logo from \"./logo.svg\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"container\">\r\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"https://codingthesmartway.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <img src={logo} width=\"30\" height=\"30\" alt=\"CodingTheSmartWay.com\" />\r\n            </a>\r\n            <Link to=\"merm-todo-app/\" className=\"navbar-brand\">MERN-Stack Todo App</Link>\r\n            <div className=\"collpase navbar-collapse\">\r\n              <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"navbar-item\">\r\n                  <Link to=\"/\" className=\"nav-link\">Todos</Link>\r\n                </li>\r\n                <li className=\"navbar-item\">\r\n                  <Link to=\"merm-todo-app/create\" className=\"nav-link\">Create Todo</Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n          <br/>\r\n          <Route path=\"merm-todo-app/\" exact component={TodosList} />\r\n          <Route path=\"merm-todo-app/edit/:id\" component={EditTodo} />\r\n          <Route path=\"merm-todo-app/create\" component={CreateTodo} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}